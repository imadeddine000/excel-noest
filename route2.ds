
import { NextRequest, NextResponse } from "next/server";
import { promises as fs } from "fs";
import * as XLSX from "xlsx";
import formidable from "formidable";

export const config = {
  api: {
    bodyParser: false,
  },
};

export async function POST(req: NextRequest) {
  const form = formidable({
    multiples: false,
    keepExtensions: true,
  });

  console.log("Request headers:", req.headers);
  if (req.headers) {
    console.log("Content-Length:", req.headers.get("content-length"));
  }

  let buffer;
  try {
    buffer = await req.arrayBuffer();
  } catch (error) {
    console.error("Error getting request body:", error);
    // Handle the error here, perhaps by sending an error response
    return NextResponse.json({ error: "Internal Server Error" });
  }

  const parseForm = async () => {
    return new Promise((resolve, reject) => {
      form.parse(buffer, (err, fields, files) => {
        if (err) reject(err);
        resolve({ fields, files });
      });
    });
  };

  try {
    const { files } = await parseForm();
    const file = files.file[0]; // Adjust this if the file field is not an array
    const fileBuffer = await fs.readFile(file.filepath);

    const workbook = XLSX.read(fileBuffer, { type: "buffer" });
    const sheetName = workbook.SheetNames[0];
    const worksheet = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);

    // Extract the first entry
    const entry = worksheet[0];

    // Replace the URL with your actual API endpoint
    const apiUrl = "https://app.noest-dz.com/api/public/create/order";

    const payload = {
      api_token: "",
      user_guid: "",
      client: entry.client,
      phone: entry.phone,
      adresse: entry.adresse || "Skikda",
      wilaya_id: 10, // Example wilaya ID
      commune: entry.commune,
      montant: entry.montant, // Example amount
      produit: `chemise ${entry.produit}`,
      type_id: entry.type_id === "" ? 1 : 2, // Example type ID
      poids: 1, // Example weight
      stop_desk: entry.stop_desk === "domicile" ? 0 : 1, // Example stop desk option
    };

    try {
      const apiResponse = await fetch(apiUrl, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(payload),
      });
      const apiData = await apiResponse.json();
      console.log("Response from server:", apiData);
    } catch (error) {
      console.error("Error:", error);
    }

    // Respond to the client
    return NextResponse.json({ message: "Data processed successfully" });
  } catch (error) {
    console.error("Error reading or processing the file:", error);
    return NextResponse.json({ error: "Internal Server Error" });
  }
}
